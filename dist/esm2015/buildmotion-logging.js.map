{
  "version": 3,
  "file": "buildmotion-logging.js",
  "sources": [
    "ng://@buildmotion/logging/out/src/app/logging.service.ts",
    "ng://@buildmotion/logging/out/src/app/buildmotion-logging.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable, Optional } from '@angular/core';\r\n\r\nimport { loggingServiceConfig } from './logging.service.config';\r\nimport { Severity } from './severity.enum';\r\n\r\n@Injectable()\r\nexport class LoggingService {\r\n    applicationName: string = 'Angularlicio.us';\r\n    serviceName: string = 'LoggingService';\r\n    source: string;\r\n    severity: Severity;\r\n    message: string;\r\n    timestamp: Date;\r\n\r\n    /**\r\n     * The [LoggingService] constructor.\r\n     */\r\n    // constructor(\r\n    //     // @Optional() private config: loggingServiceConfig\r\n    //     applicationName: string\r\n    // ) {\r\n    //     this.log(this.serviceName, Severity.Information, `Starting logging service at: ${this.timestamp}`);\r\n    //     if(applicationName) {\r\n    //         this.applicationName = applicationName;\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * Use this method to send a log message with severity and source information\r\n     * to the application's logger.\r\n     * \r\n     * If the application environment mode is [Production], the information will\r\n     * be sent to a centralized repository.\r\n     * \r\n     * @param source\r\n     * @param severity\r\n     * @param message\r\n     */\r\n    log(source: string, severity: Severity, message: string) {\r\n        this.source = `${this.applicationName}.${source}`;\r\n        this.severity = severity;\r\n        this.message = message;\r\n        this.timestamp = new Date();\r\n\r\n        const msg = `${this.message}`;\r\n        console.log(`${this.severity} from ${this.source}: ${msg} (${this.timestamp})`);\r\n    }\r\n}\r\n",
    "import { NgModule, ModuleWithProviders, NO_ERRORS_SCHEMA } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [],\r\n  exports: [],\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n})\r\nexport class BuildMotionLoggingModule {\r\n\r\n  // static forRoot(applicationName: string): ModuleWithProviders {\r\n  //   return {\r\n  //     ngModule: BuildMotionLoggingModule,\r\n  //     providers: [\r\n  //       {provide: String, useValue: applicationName }\r\n  //     ]\r\n  //   };\r\n  // }\r\n}\r\n"
  ],
  "names": [],
  "mappings": ";;;;;;;ACAA,AAWA,MAAA,wBAAA,CAAA;;;IARA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,CAAC,gBAAgB,CAAC;aAC5B,EAAD,EAAA;;;;;;;;;;;;;;;;;ADVA,AAMA,MAAA,cAAA,CAAA;;QACA,IAAA,CAAA,eAAA,GAA8B,iBAAiB,CAA/C;QACA,IAAA,CAAA,WAAA,GAA0B,gBAAgB,CAA1C;;;;;;;;;;;;;;IA8BI,GAAG,CAAC,MAAc,EAAE,QAAkB,EAAE,OAAe,EAA3D;QACQ,IAAI,CAAC,MAAM,GAAG,CAAtB,EAAyB,IAAI,CAAC,eAAe,CAA7C,CAAA,EAAiD,MAAM,CAAvD,CAAyD,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAE5B,uBAAM,GAAG,GAAG,CAApB,EAAuB,IAAI,CAAC,OAAO,CAAnC,CAAqC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,CAApB,EAAuB,IAAI,CAAC,QAAQ,CAApC,MAAA,EAA6C,IAAI,CAAC,MAAM,CAAxD,EAAA,EAA6D,GAAG,CAAhE,EAAA,EAAqE,IAAI,CAAC,SAAS,CAAnF,CAAA,CAAsF,CAAC,CAAC;KACnF;;;IAzCL,EAAA,IAAA,EAAC,UAAU,EAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
}
