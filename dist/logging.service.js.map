{"version":3,"file":"logging.service.js","sourceRoot":"","sources":["../src/app/logging.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAErD,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;AAChE,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;;;;IAWvC;;OAEG;IACH,eAAe;IACf,0DAA0D;IAC1D,8BAA8B;IAC9B,MAAM;IACN,0GAA0G;IAC1G,4BAA4B;IAC5B,kDAAkD;IAClD,QAAQ;IACR,IAAI;IAEJ;;;;;;;;;;OAUG;;;;;;;;;;;;;;;;;;;;;;;;IACH,4BAAG;;;;;;;;;;;;;;;;;;;;;;;IAAH,UAAI,MAAc,EAAE,QAAkB,EAAE,OAAe;QACnD,IAAI,CAAC,MAAM,GAAM,IAAI,CAAC,eAAe,SAAI,MAAQ,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAE5B,IAAM,GAAG,GAAG,KAAG,IAAI,CAAC,OAAS,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,cAAS,IAAI,CAAC,MAAM,UAAK,GAAG,UAAK,IAAI,CAAC,SAAS,MAAG,CAAC,CAAC;KACnF;yBA9CL","sourcesContent":["import { Injectable, Optional } from '@angular/core';\r\n\r\nimport { loggingServiceConfig } from './logging.service.config';\r\nimport { Severity } from './severity.enum';\r\n\r\n@Injectable()\r\nexport class LoggingService {\r\n    applicationName: string = 'Angularlicio.us';\r\n    serviceName: string = 'LoggingService';\r\n    source: string;\r\n    severity: Severity;\r\n    message: string;\r\n    private timestamp: Date;\r\n\r\n    /**\r\n     * The [LoggingService] constructor.\r\n     */\r\n    // constructor(\r\n    //     // @Optional() private config: loggingServiceConfig\r\n    //     applicationName: string\r\n    // ) {\r\n    //     this.log(this.serviceName, Severity.Information, `Starting logging service at: ${this.timestamp}`);\r\n    //     if(applicationName) {\r\n    //         this.applicationName = applicationName;\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * Use this method to send a log message with severity and source information\r\n     * to the application's logger.\r\n     * \r\n     * If the application environment mode is [Production], the information will\r\n     * be sent to a centralized repository.\r\n     * \r\n     * @param source\r\n     * @param severity\r\n     * @param message\r\n     */\r\n    log(source: string, severity: Severity, message: string) {\r\n        this.source = `${this.applicationName}.${source}`;\r\n        this.severity = severity;\r\n        this.message = message;\r\n        this.timestamp = new Date();\r\n\r\n        const msg = `${this.message}`;\r\n        console.log(`${this.severity} from ${this.source}: ${msg} (${this.timestamp})`);\r\n    }\r\n}\r\n"]}